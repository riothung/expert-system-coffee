generator client {
  provider = "prisma-client-js"
}

// supabase connection
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }

// XAMPP connection
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @db.VarChar(50)
  email String @unique
  password String
  isAdmin Boolean @default(false)
  hasilPengujian HasilPengujian[]
}

model Variabel {
  id Int @id @default(autoincrement())
  kode String
  variabel String
  pasca_panen String
  ciriVariabel CiriVariabel[]
}

model CiriVariabel {
    id Int @id @default(autoincrement())
    kode String
    ciri String @db.Text
    id_variabel Int
    variabel Variabel @relation(fields: [id_variabel], references: [id])
    pasca_panen String
    bobot Int?
    pengujian Pengujian[]
  }

model Pengujian {
  id Int @id @default(autoincrement())
  form String
  id_ciriVariabel Int
  ciriVariabel CiriVariabel @relation(fields: [id_ciriVariabel], references: [id])
  // bobot Int
  // output String
  // id_saran Int
  // bobot Int
  id_hasilPengujian Int
  hasilPengujian HasilPengujian @relation(fields: [id_hasilPengujian], references: [id])
}

model HasilPengujian {
    id Int @id @default(autoincrement())
    date DateTime @default(now())
    id_user Int
    user User @relation(fields: [id_user], references: [id])
    score Int
    output String
    pengujian Pengujian[]
  }

// model Saran {
//   id Int @id @default(autoincrement())
//   id_saran String
// }


